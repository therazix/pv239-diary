<?xml version="1.0" encoding="utf-8" ?>
<views:ContentPageBase
    x:Class="Diary.Views.Entry.EntryDetailView"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:converters="clr-namespace:Diary.Converters"
    xmlns:dict="clr-namespace:Diary.Resources.Dictionaries"
    xmlns:fonts="clr-namespace:Diary.Resources.Fonts"
    xmlns:labelmodels="clr-namespace:Diary.Models.Label"
    xmlns:mediamodels="clr-namespace:Diary.Models.Media"
    xmlns:selectors="clr-namespace:Diary.Selectors"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:views="clr-namespace:Diary.Views"
    xmlns:vm="clr-namespace:Diary.ViewModels.Entry"
    x:Name="Root"
    Title="Entry Detail"
    x:DataType="vm:EntryDetailViewModel"
    ControlTemplate="{StaticResource ContentTemplate}"
    IsBusy="{Binding IsBusy}">
    <views:ContentPageBase.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <dict:BaseResourceDictionary />
            </ResourceDictionary.MergedDictionaries>
            <converters:IntToMoodIconConverter x:Key="IntToMoodIconConverter" />
            <converters:IntToMoodColorConverter x:Key="IntToMoodColorConverter" />
            <converters:MediaNameToPathConverter x:Key="MediaNameToPathConverter" />
            <selectors:MediaDataTemplateSelector x:Key="MediaDataTemplateSelector">
                <selectors:MediaDataTemplateSelector.ImageTemplate>
                    <DataTemplate x:DataType="mediamodels:MediaModel">
                        <Frame Style="{StaticResource SquareMediaFrame}">
                            <Frame.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding BindingContext.DisplayMediaPopupCommand, Source={x:Reference Root}}" CommandParameter="{Binding Id}" />
                            </Frame.GestureRecognizers>
                            <AbsoluteLayout HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand">
                                <Image
                                    AbsoluteLayout.LayoutBounds="0,0,1,1"
                                    AbsoluteLayout.LayoutFlags="All"
                                    Aspect="AspectFill"
                                    Source="{Binding FileName, Converter={StaticResource MediaNameToPathConverter}}" />
                            </AbsoluteLayout>
                        </Frame>
                    </DataTemplate>
                </selectors:MediaDataTemplateSelector.ImageTemplate>
                <selectors:MediaDataTemplateSelector.VideoTemplate>
                    <DataTemplate x:DataType="mediamodels:MediaModel">
                        <Frame Style="{StaticResource SquareMediaFrame}">
                            <Frame.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding BindingContext.DisplayMediaPopupCommand, Source={x:Reference Root}}" CommandParameter="{Binding Id}" />
                            </Frame.GestureRecognizers>
                            <AbsoluteLayout HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand">
                                <toolkit:MediaElement
                                    AbsoluteLayout.LayoutBounds="0,0,1,1"
                                    AbsoluteLayout.LayoutFlags="All"
                                    Aspect="AspectFill"
                                    ShouldShowPlaybackControls="False"
                                    Source="{Binding FileName, Converter={StaticResource MediaNameToPathConverter}}" />
                                <Label Style="{StaticResource MediaVideoOverlay}" />
                            </AbsoluteLayout>
                        </Frame>
                    </DataTemplate>
                </selectors:MediaDataTemplateSelector.VideoTemplate>
            </selectors:MediaDataTemplateSelector>
        </ResourceDictionary>
    </views:ContentPageBase.Resources>

    <ScrollView>
        <VerticalStackLayout Padding="15,10,15,15">
            <Border Margin="0,5,0,0" Style="{StaticResource ShadowBorder}">
                <VerticalStackLayout>
                    <Grid ColumnDefinitions="*, Auto">
                        <Label
                            Grid.Column="0"
                            FontAttributes="Bold"
                            FontSize="Large"
                            Text="{Binding Entry.Title}" />
                        <Label
                            Grid.Column="1"
                            FontFamily="{x:Static fonts:Fonts.FontAwesome}"
                            FontSize="Large"
                            IsVisible="{Binding Entry.IsFavorite}"
                            Text="{Static fonts:FontAwesomeIcons.Star}"
                            TextColor="{StaticResource Tertiary}" />
                    </Grid>
                    <HorizontalStackLayout Padding="0,5,0,0">
                        <Label FontAttributes="Bold" Text="Created at: " />
                        <Label FontAttributes="Italic" Text="{Binding Entry.CreatedAt}" />
                    </HorizontalStackLayout>

                    <HorizontalStackLayout>
                        <Label FontAttributes="Bold" Text="Edited at: " />
                        <Label FontAttributes="Italic" Text="{Binding Entry.EditedAt}" />
                    </HorizontalStackLayout>

                    <Label Margin="0,15,0,0" Text="{Binding Entry.Content}" />
                </VerticalStackLayout>
            </Border>

            <Border
                Margin="0,10,0,0"
                IsVisible="{Binding HasMedia}"
                Style="{StaticResource ShadowBorder}">
                <CollectionView
                    ItemTemplate="{StaticResource MediaDataTemplateSelector}"
                    ItemsLayout="VerticalGrid, 2"
                    ItemsSource="{Binding Entry.Media}"
                    SelectionMode="None" />
            </Border>

            <Border Margin="0,10,0,0" Style="{StaticResource ShadowBorder}">
                <Grid ColumnDefinitions="*,*" RowDefinitions="Auto, Auto">
                    <HorizontalStackLayout Grid.Row="0" Grid.Column="0">
                        <Label FontAttributes="Bold" Text="Mood:" />
                        <Label
                            Padding="15,0,0,0"
                            FontFamily="{x:Static fonts:Fonts.FontAwesome}"
                            FontSize="Large"
                            Text="{Binding Entry.Mood, Converter={StaticResource IntToMoodIconConverter}}"
                            TextColor="{Binding Entry.Mood, Converter={StaticResource IntToMoodColorConverter}}" />
                    </HorizontalStackLayout>
                    <HorizontalStackLayout
                        Grid.Row="0"
                        Grid.Column="1"
                        IsVisible="{Binding IsLocationSet}">
                        <Label
                            Margin="0,0,10,0"
                            FontAttributes="Bold"
                            Text="Location:" />
                        <Grid>
                            <Button
                                BackgroundColor="{StaticResource Primary}"
                                HeightRequest="25"
                                WidthRequest="25" />
                            <Label
                                Grid.Column="1"
                                FontFamily="{x:Static fonts:Fonts.FontAwesome}"
                                FontSize="Medium"
                                HorizontalOptions="Center"
                                Text="{Static fonts:FontAwesomeIcons.MapPin}"
                                TextColor="{StaticResource PrimaryLightText}"
                                VerticalOptions="Center">
                                <Label.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding DisplayMapPopupCommand}" />
                                </Label.GestureRecognizers>
                            </Label>
                        </Grid>
                    </HorizontalStackLayout>

                    <VerticalStackLayout
                        Grid.Row="1"
                        Grid.ColumnSpan="2"
                        Padding="0,10,0,0"
                        IsVisible="{Binding HasLabels}">
                        <Label FontAttributes="Bold" Text="Labels:" />
                        <CollectionView ItemsSource="{Binding Entry.Labels}">
                            <CollectionView.ItemTemplate>
                                <DataTemplate x:DataType="labelmodels:LabelListModel">
                                    <StackLayout Orientation="Horizontal" Spacing="10">
                                        <BoxView
                                            BackgroundColor="{Binding Color}"
                                            HeightRequest="20"
                                            WidthRequest="20" />
                                        <Label Text="{Binding Name}" />
                                    </StackLayout>
                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                        </CollectionView>
                    </VerticalStackLayout>
                </Grid>
            </Border>

            <Button
                Margin="0,15,0,0"
                Command="{Binding GoToEditCommand}"
                Text="Edit" />
        </VerticalStackLayout>
    </ScrollView>
</views:ContentPageBase>
