<?xml version="1.0" encoding="utf-8" ?>
<views:ContentPageBase
    x:Class="Diary.Views.Entry.EntryCreateView"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:converters="clr-namespace:Diary.Converters"
    xmlns:dict="clr-namespace:Diary.Resources.Dictionaries"
    xmlns:fonts="clr-namespace:Diary.Resources.Fonts"
    xmlns:labelmodels="clr-namespace:Diary.Models.Label"
    xmlns:mediamodels="clr-namespace:Diary.Models.Media"
    xmlns:models="clr-namespace:Diary.Models.Entry"
    xmlns:selectors="clr-namespace:Diary.Selectors"
    xmlns:texts="clr-namespace:Diary.Resources.Texts"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:views="clr-namespace:Diary.Views"
    xmlns:vm="clr-namespace:Diary.ViewModels.Entry"
    x:Name="Root"
    Title="Create Entry"
    x:DataType="vm:EntryCreateViewModel"
    ControlTemplate="{StaticResource ContentTemplate}"
    IsBusy="{Binding IsBusy}">
    <views:ContentPageBase.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <dict:BaseResourceDictionary />
            </ResourceDictionary.MergedDictionaries>
            <converters:IntToMoodIconConverter x:Key="IntToMoodIconConverter" />
            <converters:IntToMoodColorConverter x:Key="IntToMoodColorConverter" />
            <converters:MediaNameToPathConverter x:Key="MediaNameToPathConverter" />
            <converters:IsEntryFavoriteToStarColorConverter x:Key="IsEntryFavoriteToStarColorConverter" />
            <selectors:MediaDataTemplateSelector x:Key="MediaDataTemplateSelector">
                <selectors:MediaDataTemplateSelector.ImageTemplate>
                    <DataTemplate x:DataType="mediamodels:MediaModel">
                        <Frame Style="{StaticResource SquareMediaFrame}">
                            <Frame.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding BindingContext.DisplayMediaPopupCommand, Source={x:Reference Root}}" CommandParameter="{Binding Id}" />
                            </Frame.GestureRecognizers>
                            <AbsoluteLayout HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand">
                                <Image
                                    AbsoluteLayout.LayoutBounds="0,0,1,1"
                                    AbsoluteLayout.LayoutFlags="All"
                                    Aspect="AspectFill"
                                    Source="{Binding FileName, Converter={StaticResource MediaNameToPathConverter}}" />
                                <Button
                                    Command="{Binding BindingContext.RemoveMediaCommand, Source={x:Reference Root}}"
                                    CommandParameter="{Binding FileName}"
                                    Style="{StaticResource MediaDeleteButton}" />
                            </AbsoluteLayout>
                        </Frame>
                    </DataTemplate>
                </selectors:MediaDataTemplateSelector.ImageTemplate>
                <selectors:MediaDataTemplateSelector.VideoTemplate>
                    <DataTemplate x:DataType="mediamodels:MediaModel">
                        <Frame Style="{StaticResource SquareMediaFrame}">
                            <Frame.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding BindingContext.DisplayMediaPopupCommand, Source={x:Reference Root}}" CommandParameter="{Binding Id}" />
                            </Frame.GestureRecognizers>
                            <AbsoluteLayout HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand">
                                <toolkit:MediaElement
                                    AbsoluteLayout.LayoutBounds="0,0,1,1"
                                    AbsoluteLayout.LayoutFlags="All"
                                    Aspect="AspectFill"
                                    ShouldShowPlaybackControls="False"
                                    Source="{Binding FileName, Converter={StaticResource MediaNameToPathConverter}}" />
                                <Button
                                    Command="{Binding BindingContext.RemoveMediaCommand, Source={x:Reference Root}}"
                                    CommandParameter="{Binding FileName}"
                                    Style="{StaticResource MediaDeleteButton}" />
                                <Label Style="{StaticResource MediaVideoOverlay}" />
                            </AbsoluteLayout>
                        </Frame>
                    </DataTemplate>
                </selectors:MediaDataTemplateSelector.VideoTemplate>
            </selectors:MediaDataTemplateSelector>
        </ResourceDictionary>
    </views:ContentPageBase.Resources>

    <ScrollView>
        <VerticalStackLayout Padding="15">
            <Border Margin="0,0,0,0" Style="{StaticResource ShadowBorder}">
                <StackLayout>
                    <Grid ColumnDefinitions="*, Auto" RowDefinitions="Auto, Auto">
                        <VerticalStackLayout Grid.Column="0">
                            <Label FontAttributes="Bold" Text="Title:" />
                            <Entry Text="{Binding Entry.Title}" />
                        </VerticalStackLayout>

                        <Label
                            Grid.Column="1"
                            Margin="20,0,5,0"
                            FontFamily="{x:Static fonts:Fonts.FontAwesome}"
                            FontSize="Large"
                            Text="{Static fonts:FontAwesomeIcons.Star}"
                            TextColor="{Binding Entry.IsFavorite, Converter={StaticResource IsEntryFavoriteToStarColorConverter}}"
                            VerticalOptions="Center">
                            <Label.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding ToggleFavoriteCommand}" />
                            </Label.GestureRecognizers>
                        </Label>
                    </Grid>

                    <Label
                        Margin="0,20,0,0"
                        FontAttributes="Bold"
                        Text="Template:" />
                    <Picker
                        ItemDisplayBinding="{Binding Name}"
                        ItemsSource="{Binding Templates}"
                        SelectedItem="{Binding SelectedTemplate}">
                        <Picker.Behaviors>
                            <toolkit:EventToCommandBehavior Command="{Binding InsertTemplateContentCommand}" EventName="SelectedIndexChanged" />
                        </Picker.Behaviors>
                    </Picker>
                </StackLayout>
            </Border>

            <Border Margin="0,10,0,0" Style="{StaticResource ShadowBorder}">
                <Grid
                    Padding="0"
                    ColumnDefinitions="Auto, Auto"
                    ColumnSpacing="10"
                    RowDefinitions="Auto, Auto, Auto, Auto">
                    <Label
                        Grid.Row="0"
                        Grid.Column="0"
                        FontAttributes="Bold"
                        Text="Use current date and time?" />
                    <Switch
                        Grid.Row="0"
                        Grid.Column="1"
                        IsToggled="{Binding UseCurrentDateTime}"
                        VerticalOptions="Start" />

                    <Label
                        Grid.Row="2"
                        Grid.Column="0"
                        FontAttributes="Bold"
                        Text="Date:" />
                    <Label
                        Grid.Row="2"
                        Grid.Column="1"
                        FontAttributes="Bold"
                        Text="Time:" />
                    <DatePicker
                        Grid.Row="3"
                        Grid.Column="0"
                        Margin="0,5,0,0"
                        Date="{Binding SelectedDate}">
                        <DatePicker.Triggers>
                            <DataTrigger
                                Binding="{Binding UseCurrentDateTime}"
                                TargetType="DatePicker"
                                Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </DatePicker.Triggers>
                    </DatePicker>
                    <TimePicker
                        Grid.Row="3"
                        Grid.Column="1"
                        Margin="0,5,0,0"
                        TextColor="{StaticResource PrimaryDarkText}"
                        Time="{Binding SelectedTime}">
                        <TimePicker.Triggers>
                            <DataTrigger
                                Binding="{Binding UseCurrentDateTime}"
                                TargetType="TimePicker"
                                Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                                <Setter Property="TextColor" Value="{StaticResource Gray400}" />
                            </DataTrigger>
                        </TimePicker.Triggers>
                    </TimePicker>
                </Grid>
            </Border>

            <Border Margin="0,10,0,0" Style="{StaticResource ShadowBorder}">
                <VerticalStackLayout>
                    <Label FontAttributes="Bold" Text="Content:" />
                    <Editor
                        AutoSize="TextChanges"
                        MinimumHeightRequest="100"
                        Text="{Binding Entry.Content}"
                        TextColor="{StaticResource PrimaryDarkText}" />
                </VerticalStackLayout>
            </Border>

            <Border Margin="0,10,0,0" Style="{StaticResource ShadowBorder}">
                <VerticalStackLayout>
                    <CollectionView
                        ItemTemplate="{StaticResource MediaDataTemplateSelector}"
                        ItemsLayout="VerticalGrid, 2"
                        ItemsSource="{Binding Entry.Media}"
                        SelectionMode="None" />
                    <HorizontalStackLayout Padding="0,5,0,0" Spacing="10">
                        <Button Command="{Binding AddImageCommand}" Text="Add image" />
                        <Button Command="{Binding AddVideoCommand}" Text="Add video" />
                    </HorizontalStackLayout>
                </VerticalStackLayout>
            </Border>

            <Border Margin="0,10,0,0" Style="{StaticResource ShadowBorder}">
                <VerticalStackLayout>
                    <HorizontalStackLayout>
                        <Label FontAttributes="Bold" Text="Mood:" />
                        <Slider
                            Maximum="5"
                            MaximumTrackColor="{StaticResource PrimaryDarkText}"
                            Minimum="1"
                            WidthRequest="200"
                            Value="{Binding Entry.Mood}" />
                        <Label
                            Margin="15,0,0,0"
                            FontFamily="{x:Static fonts:Fonts.FontAwesome}"
                            FontSize="Large"
                            Text="{Binding Entry.Mood, Converter={StaticResource IntToMoodIconConverter}}"
                            TextColor="{Binding Entry.Mood, Converter={StaticResource IntToMoodColorConverter}}" />
                    </HorizontalStackLayout>

                    <HorizontalStackLayout Margin="0,20,0,0">
                        <Label FontAttributes="Bold" Text="Location:" />
                        <Label
                            Margin="10,0,0,0"
                            Text="{Binding LocationText}"
                            TextColor="{Binding LocationTextColor}" />
                        <Grid Margin="10,0,0,0">
                            <Button
                                BackgroundColor="{StaticResource Primary}"
                                HeightRequest="25"
                                WidthRequest="25" />
                            <Label
                                Grid.Column="1"
                                FontFamily="{x:Static fonts:Fonts.FontAwesome}"
                                FontSize="Medium"
                                HorizontalOptions="Center"
                                Text="{Static fonts:FontAwesomeIcons.MapPin}"
                                TextColor="{StaticResource PrimaryLightText}"
                                VerticalOptions="Center">
                                <Label.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding DisplayMapPopupCommand}" />
                                </Label.GestureRecognizers>
                            </Label>
                        </Grid>
                        <Grid Margin="10,0,0,0" IsVisible="{Binding IsLocationSet}">
                            <Button
                                BackgroundColor="{StaticResource Secondary}"
                                HeightRequest="25"
                                WidthRequest="25" />
                            <Label
                                Grid.Column="1"
                                FontFamily="{x:Static fonts:Fonts.FontAwesome}"
                                FontSize="Medium"
                                HorizontalOptions="Center"
                                Text="{Static fonts:FontAwesomeIcons.TrashAlt}"
                                TextColor="{StaticResource PrimaryLightText}"
                                VerticalOptions="Center">
                                <Label.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding ClearLocationCommand}" />
                                </Label.GestureRecognizers>
                            </Label>
                        </Grid>
                    </HorizontalStackLayout>

                    <Label
                        Padding="0,15,0,0"
                        FontAttributes="Bold"
                        Text="Labels:" />
                    <CollectionView
                        ItemsSource="{Binding Labels}"
                        MaximumHeightRequest="120"
                        SelectedItems="{Binding SelectedLabels, Mode=TwoWay}"
                        SelectionMode="Multiple">
                        <CollectionView.ItemTemplate>
                            <DataTemplate x:DataType="labelmodels:LabelListModel">
                                <StackLayout Orientation="Horizontal" Spacing="10">
                                    <BoxView
                                        BackgroundColor="{Binding Color}"
                                        HeightRequest="20"
                                        WidthRequest="20" />
                                    <Label Text="{Binding Name}" />
                                </StackLayout>
                            </DataTemplate>
                        </CollectionView.ItemTemplate>
                    </CollectionView>
                </VerticalStackLayout>
            </Border>

            <Button
                Margin="0,15,0,0"
                Command="{Binding SaveCommand}"
                Text="Submit" />
        </VerticalStackLayout>
    </ScrollView>
</views:ContentPageBase>
